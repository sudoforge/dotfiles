# generic hotkeys
# ------------------------------------------------------------------------------

# terminal emulator
super + Return
    alacritty

# show executable commands
super + space
    rofi -disable-history -show run

# show all windows
alt + Tab
    rofi -show window

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd && notify-send -u low -t 1500 "sxhkd reloaded"

# set clipboard using tmux buffer
super + v
    tmux show-buffer | xclip -selection c

# set tmux buffer using the system clipboard
super + c
    xclip -select c -o | tmux load-buffer -

# lock the screen
super + l
    /usr/bin/physlock -md

# media keys
# ------------------------------------------------------------------------------
XF86AudioMute
    amixer -D pulse set Master 1+ toggle

XF86AudioRaiseVolume
    amixer set Master 5%+

XF86AudioLowerVolume
    amixer set Master 5%-

XF86AudioMicMute
    amixer set Capture toggle

XF86MonBrightnessUp
	brightnessctl -d amdgpu_bl0 set 5%+

super + XF86MonBrightnessUp
	brightnessctl -d amdgpu_bl0 set 100%

XF86MonBrightnessDown
	brightnessctl -d amdgpu_bl0 set 5%-

super + XF86MonBrightnessDown
	brightnessctl -d amdgpu_bl0 set 0%

XF86WLAN
    rfkill toggle bluetooth wlan

# password manager
# ------------------------------------------------------------------------------

# copy passwords to the system clipboard
ctrl + backslash
    gopass ls --flat |\
      rofi -dmenu -p 'pass' |\
      xargs -r gopass -c

# copy otp codes to the system clipboard
ctrl + shift + backslash
    gopass ls --flat |\
      rofi -dmenu -p 'otp' |\
      xargs -r gopass otp -c

# browser
# ------------------------------------------------------------------------------

super + b
    qutebrowser


# screenshots
# ------------------------------------------------------------------------------

# capture current window
super + p
    maim -i $(xdotool getactivewindow) ~/media/screenshots/$(date +%Y%m%dT%H%M%S%3N).png &&\
    notify-send "screenshot:" "~/media/screenshots/$(/usr/bin/ls --sort time ~/media/screenshots | head -n 1)"

# capture a region
super + alt + p
    maim -s ~/media/screenshots/$(date +%Y%m%dT%H%M%S%3N).png &&\
    notify-send "screenshot:" "~/media/screenshots/$(/usr/bin/ls --sort time ~/media/screenshots | head -n 1)"

# capture the entire desktop
super + ctrl + p
    maim ~/media/screenshots/$(date +%Y%m%dT%H%M%S%3N).png &&\
    notify-send "screenshot:" "~/media/screenshots/$(/usr/bin/ls --sort time ~/media/screenshots | head -n 1)"

# notifications
# ------------------------------------------------------------------------------

# Close the current notification
super + ctrl + space
  dunstctl close

# Close all notifications that are currently displayed
super + shift + space
  dunstctl close-all

# Perform the default action (or opens the context menu) of the current
# notification
super + period
  dunstctl action 0

# Redisplay the notification that was most recently closed. This can be repeated
# up to the history limit configured in ~/.config/dunst/dunstrc
super + ctrl + period
  dunstctl history-pop

# Toggle notifications
# This will either turn notifications off, or on, depending on the current
# setting
super + n
    exec ~/.local/bin/toggle-dnd

# bspwm hotkeys
# ------------------------------------------------------------------------------

# quit bspwm normally
super + alt + l
    bspc quit

# close and kill
super + {_,shift + }w
    bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
    bspc desktop -l next

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
    bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
super + g
    bspc node -s biggest

# set the window state
super + {t,shift + t,s,f}
    bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {x,y,z}
    bspc node -g {locked,sticky,private}

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
    bspc node -{f,s} {west,south,north,east}

# focus the next/previous node
super + {_,shift + }c
    bspc node -f {next,prev}

# focus the next/previous desktop
super + bracket{left,right}
    bspc desktop -f {prev,next}

# focus the last node/desktop
super + {grave,Tab}
    bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
    bspc wm -h off; \
    bspc node {older,newer} -f; \
    bspc wm -h on

# focus a target desktop, or send a node to the target desktop
super + {_,shift +} {1-9,0}
  bspc {desktop -f, node focused -d} \^{1-9,10}

# preselect
# ------------------------------------------------------------------------------

# preselect the direction
super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

# cancel the preselection for the focused node
super + ctrl + space
    bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# move/resize
# ------------------------------------------------------------------------------

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}
