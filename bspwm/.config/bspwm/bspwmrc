#! /usr/bin/env bash

/usr/lib/geoclue-2.0/demos/agent &
sxhkd &

# Ensure that removed/disabled monitors are removed
bspc config remove_disabled_monitors  true
bspc config remove_unplugged_monitors true

# set mouse acceleration settings
xset m 1/2 4

# bspc rules for bspwm
bspc config border_width        0
bspc config window_gap          0
bspc config top_padding         0
bspc config left_padding        0
bspc config right_padding       0
bspc config bottom_padding      0

bspc config split_ratio           0.50
bspc config borderless_monocle    true
bspc config gapless_monocle       true
bspc config focus_by_distance     false
bspc config history_aware_focus   true
bspc config focus_follows_pointer true
bspc config pointer_follows_focus false
bspc config click_to_focus        false
bspc config adaptive raise        true
bspc config center_pseudo_tiled   true

bspc config normal_border_color "#526562"
bspc config focused_border_color "#47575f"
bspc config presel_feedback_color "#804f4e"

# Configure BSPWM desktops
#
# It is important to note here that I only ever use a single monitor at any
# given time; currently, my main workstation is a laptop which is used in both
# "docked" and "undocked" (normal) modes. `autorandr` is used to configure my
# displays; given that, bspwm needs to dynamically detect the active monitor
# instead of statically configuring the desktops for a given monitor at runtime.
#
# We can accomplish this by querying xrandr for the single monitor which is
# connected and set as the primary (this happens in my autorandr config).
#
# TODO(sudoforge): It might make more sense to configure the desktops in an
# autorandr hook, depending on when autorandr starts up.
primary_monitor=$(xrandr --query | awk '/\yconnected primary\y/')
if [ -z "$primary_monitor" ]; then
  notify-send \
    -u critical "BSPWM init failure" \
    "Unable to detect the primary monitor. BSPWM desktops will not be configured."
else
  bspc monitor "${primary_monitor%%\ *}" -d term web wallet
fi

# Run autorandr in order to execute user-space hooks. We use `--force` here to
# ensure that the hooks are executed even if we haven't changed profiles.
autorandr --change --force
